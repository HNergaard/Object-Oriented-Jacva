package eksamen;

import java.util.ArrayList;
import java.util.Collection;

public class Diner {
	
	private Collection<Table> tables = new ArrayList<Table>();
	private Collection<Seating> seatings = new ArrayList<Seating>();
	
	public void addTable(Table table) {
		tables.add(table);
	}
	
	public void removeTable(Table table) {
		if (isOccupied(table)) {
			throw new IllegalArgumentException ("Can not remove an occupied table");
		}
		tables.remove(table);
	}
	
	public void mergeTables()
	
	public boolean isOccupied(Table table) {
		for(Seating seating : seatings) {
			if(seating.getTable() == table) {
				return true;
			}
		}
		return false;
	}
	
	public int getCapacity(boolean includeOccupied) {
		int capacity = 0;
		for(Table table : tables) {
			if(includeOccupied || (!isOccupied(table)))
			capacity += table.getMaxCap();
		}
		return capacity;
	}
}
